syntax = "proto3";
option java_multiple_files = true;
option java_package = "com.example.client_spring.grpc";

message TickerRequest {
  string market = 1;
}

message TickerResponse {
  string market = 1;  //종목 구분 코드
  string trade_date = 2;  //최근 거래 일자(UTC)
  string trade_time = 3;  //최근 거래 시각(UTC)
  string trade_date_kst = 4;  //최근 거래 일자(KST)
  string trade_time_kst = 5;  //최근 거래 시각(KST)
  int64 trade_timestamp = 6; //최근 거래 일시(UTC)
  double opening_price = 7; //시가
  double high_price = 8;  //고가
  double low_price = 9; //저가
  double trade_price = 10; //종가(현재가)
  double prev_closing_price = 11;  //전일 종가(UTC 0시 기준)
  string change = 12;  //보합/상승/하락 구분
  double change_price = 13;  //변화액의 절대값
  double change_rate = 14; //변화율의 절대값
  double signed_change_price = 15; //부호가 있는 변화액
  double signed_change_rate = 16;  //부호가 있는 변화율
  double trade_volume = 17;  //가장 최근 거래량
  double acc_trade_price = 18; //누적 거래대금(UTC 0시 기준)
  double acc_trade_price_24h = 19; //24시간 누적 거래대금
  double acc_trade_volume = 20;  //누적 거래량(UTC 0시 기준)
  double acc_trade_volume_24h = 21;  //24시간 누적 거래량
  double highest_52_week_price = 22; //52주 신고가
  string highest_52_week_date = 23;  //52주 신고가
  double lowest_52_week_price = 24;  //52주 신저가
  string lowest_52_week_date = 25; //52주 신저가
  int64 timestamp = 26; //타임스탬프
}

message StreamRequest {
  string type = 1;
  string code = 2;
}

message StreamResponse {
  string message = 1;
}

service TickerService {
  rpc getTicker(TickerRequest) returns (TickerResponse);
  rpc streamTicker(StreamRequest) returns (stream StreamResponse);
}